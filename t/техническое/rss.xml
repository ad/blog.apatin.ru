<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Weblog</title><link>/t/%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B5/</link><description>Личный блог с мыслями и наблюдениями</description><managingEditor>rss@apatin.ru Daniel Apatin</managingEditor><webMaster>rss@apatin.ru Daniel Apatin</webMaster><copyright>Daniel Apatin</copyright><lastBuildDate>Sun, 31 Jan 2021 17:17:00 +0300</lastBuildDate><atom:link href="/t/%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B5/rss.xml" rel="self" type="application/rss+xml"/><item><title>Переезд на Github Pages</title><link>/p/to-gh-pages/</link><pubDate>Sun, 31 Jan 2021 17:17:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/to-gh-pages/</guid><description>&lt;p>Понаблюдав некоторое время за этим блогом и проанализировав поведение пользователя, я пришел к выводу, что этому сайту достаточно статичного контента. Поиском по сайта за последние 3 года воспользовались пару раз.&lt;/p></description></item><item><title>Как Cloudflare защищает email</title><link>/p/how-cloudflare-protect-email/</link><pubDate>Sun, 26 Apr 2020 11:30:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/how-cloudflare-protect-email/</guid><description>&lt;p>Как опубликовать адрес электронной почты на сайте, не боясь, что в него тут же начнут валиться горы спама?&lt;/p>
&lt;p>В большинстве случаев эту задачу решают так: вставка адреса картинкой; написание особым способом, который читатели сайта смогут расшифровать (не всегда); форма для ввода текста письма. Разберём плюсы и минусы каждого.&lt;/p>
&lt;h2 id="вставка-адреса-картинкой">Вставка адреса картинкой&lt;/h2>
&lt;p>[+] большинство ботов не читают тексты с картинки&lt;/p>
&lt;p>[-] оформление картинки нужно как-то вписать в контекст&lt;/p>
&lt;p>[-] картинку нужно хранить и беречь&lt;/p>
&lt;p>[-] не получится создать письмо по нажатию на картинку&lt;/p>
&lt;h2 id="написание-особым-способом">Написание особым способом&lt;/h2>
&lt;p>[+] скорее всего боты не смогут понять что это адрес электронной почты&lt;/p>
&lt;p>[-] как и некоторые посетители сайта: help 911 (собака) mail com (замените пробелы на точки)&lt;/p>
&lt;p>[-] боты всё же умеют разбирать большинство таких &amp;ldquo;шифровок&amp;rdquo;&lt;/p>
&lt;h2 id="форма-для-ввода-текста-письма">Форма для ввода текста письма&lt;/h2>
&lt;p>[+] ваша почта явно не указана&lt;/p>
&lt;p>[-] форма ввода текста — источник для спама (популярные капчи тоже разгадываются)&lt;/p>
&lt;p>[-] разработка и поддержка формы ввода письма&lt;/p>
&lt;p>[-] люди могут не хотеть писать в некую форму, не зная получит ли нужный человек письмо&lt;/p>
&lt;p>Есть ли способ замаскировать почту так, чтобы и посетителям было удобно и боты на неё не обращали внимания?&lt;/p>
&lt;p>&lt;em>Cloudflare Email Address Obfuscation&lt;/em> позволяет подменять адреса на html-страничках таким образом, чтобы они перестали быть понятными ботам.&lt;/p>
&lt;p>
&lt;a href="#">&lt;span class="__email__" data-class="472f222b37697e7676072a262e2b6924282a">[email&amp;nbsp;protected]&lt;/span>&lt;/a>
-&amp;gt; 472f222b37697e7676072a262e2b6924282a&lt;/p>
&lt;p>&lt;strong>Откройте исходный код страницы и убедитесь, что там нет адреса электронной почты!&lt;/strong>&lt;/p>
&lt;p>Если интересно как работает этот способ и как сделать аналогичное решение у себя, читайте дальше.&lt;/p></description></item><item><title>Github Actions и автоматическое создание релизов на Go</title><link>/p/github-actions-go-release/</link><pubDate>Fri, 27 Sep 2019 12:26:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/github-actions-go-release/</guid><description>&lt;p>Если вам как и мне надоело делать релизы на Github для тех кто хочет попробовать последние изменения в коде, то можно автоматизировать это средствами самого Github, а именно Github Actions.&lt;/p></description></item><item><title>The uWSGI Spooler</title><link>/p/uwsgi-spooler/</link><pubDate>Thu, 13 Apr 2017 10:46:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/uwsgi-spooler/</guid><description>&lt;p>Когда проектируешь масштабируемые системы, где приходится обращаться ко множеству внешних компонент, например, использование стороннего API, отправка почты или конвертация видео, лучшим способом реализации является асинхронная модель с системой очередей, которая является связующим звеном для взаимодействия всех компонент системы…&lt;/p>
&lt;p>Самой популярной системой очередей в Python является Celery, она обладает широким набором возможностей по управлению задачами.&lt;/p>
&lt;p>К сожалению, сложные системы на базе Celery сложно поддерживать в работоспособном состоянии и когда что-то идёт не так, то найти проблему бывает весьма не просто. Можете спросить любого девопса об опыте работы с Celery, но будьте готовы услышать не очень приятные слова.&lt;/p>
&lt;p>К счастью, есть альтернативное решение и сейчас я расскажу о нём.&lt;/p></description></item><item><title>Установка и настройка PostgresQL</title><link>/p/postgres_install/</link><pubDate>Mon, 12 Dec 2016 15:12:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/postgres_install/</guid><description>&lt;h2 id="установка">Установка&lt;/h2>
&lt;pre>&lt;code>apt-get update
apt-get upgrade
apt-get install postgresql
&lt;/code>&lt;/pre></description></item><item><title>nginx for frontenders</title><link>/p/nginx_for_frontenders/</link><pubDate>Tue, 26 Apr 2016 11:37:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/nginx_for_frontenders/</guid><description>&lt;p>Очень часто бывает, что фронтенд-разработчику необходимо добавить или изменить функционал сайта, но нет возможности получить его dev-версию, на которую можно повлиять. Обычно это пытаются обойти запуском браузера с отключенной безопасностью, но не всегда это помогает.&lt;/p>
&lt;p>Я расскажу как при работе с «чёрным ящиком» иметь возможность воздействать на его ответы, а также как решать проблемы связанные с безопасностью.&lt;/p></description></item><item><title>Настройка Monit для поддержания жизни nginx/postgresql</title><link>/p/monit/</link><pubDate>Tue, 29 Dec 2015 11:39:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/monit/</guid><description>&lt;h2 id="установка">Установка&lt;/h2>
&lt;pre>&lt;code>apt-get install monit
&lt;/code>&lt;/pre></description></item><item><title>Let’s Encrypt SSL Certificates и Nginx</title><link>/p/letsencrypt_nginx/</link><pubDate>Tue, 17 Nov 2015 14:44:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/letsencrypt_nginx/</guid><description>&lt;h2 id="первым-делом-скачиваем-актуальную-версию">Первым делом скачиваем актуальную версию&lt;/h2>
&lt;pre>&lt;code>sudo apt-get update
sudo apt-get install git
git clone https://github.com/letsencrypt/letsencrypt
&lt;/code>&lt;/pre></description></item><item><title>Postgresql reload</title><link>/p/postgresql_reload/</link><pubDate>Fri, 25 Sep 2015 14:42:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/postgresql_reload/</guid><description>Часто бывает, что после того как внесешь изменения в pg_hba.conf нужно сделать рестарт, чтобы изменения вступили в силу. Оказывается, можно не делать, а выполнить:
# pg_ctl reload или
SELECT pg_reload_conf();</description></item><item><title>Логирование изменений в Postgresql</title><link>/p/postgres_logging_trigger/</link><pubDate>Tue, 26 May 2015 12:59:00 +0300</pubDate><author>rss@apatin.ru (Daniel Apatin)</author><guid>/p/postgres_logging_trigger/</guid><description>&lt;p>Иногда нужно добавить логирование изменений в некоторых таблицах, для этого приходится городить сложную систему, которая будет отслеживать изменения и записывать в нужное место что поменялось, и есть большой риск забыть добавить логирование в каком-то месте, эту проблему можно изящно решить сделав триггер на изменение таблицы.&lt;/p></description></item></channel></rss>